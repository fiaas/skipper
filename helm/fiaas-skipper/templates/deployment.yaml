apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: "{{ .Values.name }}"
  labels:
    app: "{{ .Values.name }}"
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  replicas: 1
  revisionHistoryLimit: 5
  selector:
    matchLabels:
      app: "{{ .Values.name }}"
  template:
    metadata:
      annotations:
        prometheus.io/path: /_/metrics
        prometheus.io/port: http5000
        prometheus.io/scrape: "true"
        checksum/config: {{ include (print $.Template.BasePath "/config_map.yaml") . | sha256sum }}
        {{- range $key, $value := .Values.annotations }}
        {{ $key }}: {{ $value }}
        {{- end }}
      labels:
        app: "{{ .Values.name }}"
    spec:
      containers:
      - name: "{{ .Values.name }}"
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: "{{ .Values.image.pullPolicy }}"
        ports:
        - containerPort: 5000
          name: http5000
          protocol: TCP
        livenessProbe:
          initialDelaySeconds: 10
          httpGet:
            path: /healthz
            port: http5000
            scheme: HTTP
        readinessProbe:
          initialDelaySeconds: 10
          httpGet:
            path: /healthz
            port: http5000
            scheme: HTTP
{{- if .Values.deployment.includeResourceUsage }}
        resources:
          limits:
            cpu: 125m
            memory: 64Mi
          requests:
            cpu: 125m
            memory: 64Mi
{{- end }}
        volumeMounts:
        - name: {{ .Chart.Name }}
          mountPath: /var/run/config/fiaas
      volumes:
      - name: {{ .Chart.Name }}
        configMap:
          name: {{ .Chart.Name }}
      restartPolicy: Always
