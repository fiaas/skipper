
# Copyright 2017-2019 The FIAAS Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Values.name }}"
  labels:
    app: "{{ .Values.name }}"
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
    {{- range $key, $value := .Values.labels.global }}
    {{ $key }}: {{ $value }}
    {{- end }}
spec:
  replicas: 1
  revisionHistoryLimit: 5
  selector:
    matchLabels:
      app: "{{ .Values.name }}"
  template:
    metadata:
      annotations:
        prometheus.io/path: /_/metrics
        prometheus.io/port: http5000
        prometheus.io/scrape: "true"
        checksum/config: {{ include (print $.Template.BasePath "/config_map.yaml") . | sha256sum }}
        checksum/fiaas_override: {{ .Files.Get "fiaas_override.yaml" | sha256sum }}
        {{- range $key, $value := .Values.annotations }}
        {{ $key }}: {{ $value }}
        {{- end }}
      labels:
        app: "{{ .Values.name }}"
        {{- range $key, $value := .Values.labels.global }}
        {{ $key }}: {{ $value }}
        {{- end }}
    spec:
      {{- if .Values.rbac.enabled }}
      serviceAccountName: {{ .Values.name }}
      {{- end }}
      containers:
      - name: "{{ .Values.name }}"
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: "{{ .Values.image.pullPolicy }}"
        args:
        {{- if .Values.manageRBAC }}
        - "--manage-rbac"
        {{- end }}
        ports:
        - containerPort: 5000
          name: http5000
          protocol: TCP
        livenessProbe:
          initialDelaySeconds: 10
          timeoutSeconds: 180
          httpGet:
            path: /healthz
            port: http5000
            scheme: HTTP
        readinessProbe:
          initialDelaySeconds: 10
          timeoutSeconds: 180
          httpGet:
            path: /healthz
            port: http5000
            scheme: HTTP
{{- if .Values.deployment.includeResourceUsage }}
        resources:
          limits:
            cpu: 125m
            memory: 256Mi
          requests:
            cpu: 125m
            memory: 256Mi
{{- end }}
        volumeMounts:
        - name: {{ .Chart.Name }}
          mountPath: /var/run/config/fiaas
      volumes:
      - name: {{ .Chart.Name }}
        configMap:
          name: {{ .Chart.Name }}
      restartPolicy: Always
